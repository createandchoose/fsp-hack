import telebot
import psycopg2
from psycopg2 import OperationalError
import time
from telebot import types

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –¥–∞–Ω–Ω—ã—Ö PostgreSQLüî•
DB_HOST = "80.90.185.102"
DB_NAME = "default_db"
DB_USER = "admin"
DB_PASSWORD = "fsphack1"

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞
TELEGRAM_BOT_TOKEN = "6947924117:AAGFMG2m5LkvTa8s3xyhavT3nWLZBi7jccE"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def check_database_connection():
    try:
        connection = psycopg2.connect(host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASSWORD)
        connection.close()
        return True
    except OperationalError:
        return False

@bot.message_handler(commands=['metrics'])
def send_metrics(message):
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
        connection = psycopg2.connect(
            host=DB_HOST,
            database=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD
        )
        cursor = connection.cursor()

        # –ó–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫
        cursor.execute("SELECT max(now() - pg_stat_activity.query_start) FROM pg_stat_activity;")
        longest_transaction_duration = cursor.fetchone()[0]

        cursor.execute("SELECT count(*) FROM pg_stat_activity;")
        active_sessions_count = cursor.fetchone()[0]

        cursor.execute("SELECT count(*) FROM pg_stat_activity WHERE wait_event IS NOT NULL;")
        sessions_with_lwlock_count = cursor.fetchone()[0]

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ —Å–∏—Å—Ç–µ–º—ã
        disk_free_space_gb = disk_free_space / (1024 ** 3)
        cpu_load = psutil.cpu_percent(interval=1)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ –≤ Telegram
        metrics_message = f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∞–º–æ–π –¥–æ–ª–≥–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {longest_transaction_duration_ms} ms\n" \
                                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {active_sessions_count}\n" \
                                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º LWLock –≤ –∫–æ–ª–æ–Ω–∫–µ wait_event: {sessions_with_lwlock_count}\n" \
                                f"–û–±—ä—ë–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: {disk_free_space_gb:.2f} GB\n" \
                                f"–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {cpu_load}%"
        bot.send_message(message.chat.id, metrics_message)

        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        cursor.close()
        connection.close()

    except psycopg2.Error as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, message.from_user.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–µ–¥–∏—Ç –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö PostgreSQL.")
    

def check_database_status():
    message = bot.send_message
    if check_database_connection():
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.")
        bot.send_message(463407972, "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.")
    else:
        print("–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.")
        bot.send_message(463407972, "–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.")

# –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
while True:
    check_database_status()
    time.sleep(15)